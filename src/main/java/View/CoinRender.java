/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.UpdateCoins;
import Model.Coin;
import Model.MarketSingelton;
import static View.MainWindow1.current_page;
import java.awt.Color;
import java.awt.Component;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.ListCellRenderer;


public class CoinRender extends javax.swing.JPanel implements ListCellRenderer<Coin>{
    private UpdateCoins cl;
    private MainWindow1 mw1;
    
    Coin selectedCoin;
    public CoinRender() {
        
        initComponents();
    }
    
    public Coin getSelectedCoin(){
       
        return this.selectedCoin;
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblCoinName = new javax.swing.JLabel();
        lblValue = new javax.swing.JLabel();
        coinIcon = new javax.swing.JLabel();
        lblSymbol = new javax.swing.JLabel();
        lblPriceChange = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setBackground(java.awt.Color.white);

        lblCoinName.setFont(new java.awt.Font("Avenir Next", 0, 18)); // NOI18N
        lblCoinName.setText("Bitcoin");

        lblValue.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblValue.setText("$10000");

        lblSymbol.setText("BTC");

        lblPriceChange.setText("+ 1.70%");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(coinIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCoinName, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSymbol))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblValue, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPriceChange))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(coinIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCoinName)
                            .addComponent(lblValue))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSymbol)
                            .addComponent(lblPriceChange))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel coinIcon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCoinName;
    private javax.swing.JLabel lblPriceChange;
    private javax.swing.JLabel lblSymbol;
    private javax.swing.JLabel lblValue;
    // End of variables declaration//GEN-END:variables

    
    // i used the code from the RPG game from visual studio 1
    @Override
    public Component getListCellRendererComponent(JList<? extends Coin> list, Coin coin, int index, boolean isSelected, boolean cellHasFocus) {
         //System.out.println("bo nirea aim egati lepo " + current_page);
        Color green = new Color(50,205,50);
        lblCoinName.setText(coin.getCoinName());
        lblValue.setText(coin.currencySymbol + coin.getCoinValue());
        lblSymbol.setText(coin.getSymbol().toUpperCase());
        lblPriceChange.setText(coin.getPriceChange()+ "%");
        if(lblPriceChange.getText().charAt(0) == '-'){
            lblPriceChange.setForeground(Color.red);
        }
        else{
            lblPriceChange.setText("+" + coin.getPriceChange() + "%");
            lblPriceChange.setForeground(green);
        }
       
        
        
        if(isSelected){
            setBackground(java.awt.Color.getHSBColor(32, 24, 123));
            selectedCoin = coin;
            cl.selCoin = coin;
            //System.out.println(cl.selCoin.getCoinName() + "bo nirea achsahv");
        }
        else{
            setBackground(java.awt.Color.white);
        }
        if(current_page.equals("portfolio")){
            MarketSingelton ms = MarketSingelton.getInstance();
             
//            int indx = ms.getWholeList().indexOf(coin);
//            Coin tmp = ms.getWholeList().get(index);
                  
            float sumInDollar = ms.getCoinPrice(coin) * coin.getAmountl();
            //float sumInDollar = coin.getCoinValue() * coin.getAmountl();
            
//            System.out.println(
//            "name           : " + coin.getCoinName()+ "\n" +
//            "amount of coins: " + coin.getAmountl() + "\n" +
//            "value of coin: " + tmp.getCoinValue() + "\n" +
//             "name of coin: " + tmp.getCoinName()+ "\n" 
//            
//            );
            
            lblValue.setText(coin.currencySymbol + sumInDollar);
            lblPriceChange.setText(String.valueOf(coin.getAmountl()));
          //  System.out.println("amount :" + coin.getAmountl());
            lblPriceChange.setForeground(Color.BLACK);
            
        }
        try {
            coinIcon.setIcon(new ImageIcon(new URL(coin.getIconURL()))); // NOI18N
        } catch (MalformedURLException ex) {
            Logger.getLogger(CoinRender.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
        return this;
    }
}
